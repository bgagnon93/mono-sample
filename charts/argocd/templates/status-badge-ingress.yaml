{{- $argocd := index .Values "argo-cd" }}
{{- if eq (  toString (index (  coalesce $argocd.server.config  $argocd.configs.cm ) "statusbadge.enabled" )) "true" }}
{{- $servicePort := ternary 443 80 $argocd.server.ingress.https -}}
{{- $paths := $argocd.server.ingress.paths -}}
{{- $extraPaths := $argocd.server.ingress.extraPaths -}}
{{- $pathType := $argocd.server.ingress.pathType -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-server-badge
  namespace: {{ .Release.Namespace | quote }}
  annotations: {}
spec:
  {{- with $argocd.server.ingress.ingressClassName }}
  ingressClassName: {{ . }}
  {{- end }}
  rules:
  {{- if $argocd.server.ingress.hosts }}
    {{- range $host := $argocd.server.ingress.hosts }}
    - host: {{ $host | quote }}
      http:
        paths:
          {{- with $extraPaths }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          - path: /api/badge
            pathType: Prefix
            backend:
              service:
                name: argocd-server
                port:
                  number: {{ $servicePort }}

    {{- end -}}
  {{- else }}
    - http:
        paths:
          {{- with $extraPaths }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          - path: /api/badge
            pathType: Prefix
            backend:
              service:
                name: argocd-server
                port:
                  number: {{ $servicePort }}

  {{- end -}}
  {{- with $argocd.server.ingress.tls }}
  tls:
    {{- toYaml . | nindent 4 }}
  {{- end -}}
{{- end -}}
